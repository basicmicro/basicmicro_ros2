# Multi-Controller Robot Configuration
# ====================================
# This configuration supports robots with multiple Basicmicro controllers,
# such as 4-wheel or 6-wheel robots, or robots with separate drive and
# auxiliary motor controllers.

controller_manager:
  ros__parameters:
    update_rate: 100  # Hz - Controller update rate
    
    # Joint State Broadcaster - publishes joint states for all wheels
    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster
    
    # Primary Drive Controller - front wheels or main drive
    front_drive_controller:
      type: diff_drive_controller/DiffDriveController
    
    # Secondary Drive Controller - rear wheels (for 4WD/6WD robots)
    rear_drive_controller:
      type: diff_drive_controller/DiffDriveController
    
    # Auxiliary Controller - for implements, arms, etc.
    auxiliary_controller:
      type: position_controllers/JointGroupPositionController

# Joint State Broadcaster Configuration
joint_state_broadcaster:
  ros__parameters:
    # All joint names must match those in URDF
    joints:
      - front_left_wheel_joint
      - front_right_wheel_joint
      - rear_left_wheel_joint
      - rear_right_wheel_joint
      - aux_joint_1
      - aux_joint_2
    
    # Publishing configuration
    interfaces:
      - position
      - velocity
      - effort
    
    # Extra joints for sensors
    extra_joints: []

# Front Drive Controller Configuration
front_drive_controller:
  ros__parameters:
    # Joint names for front wheels
    left_wheel_names: ["front_left_wheel_joint"]
    right_wheel_names: ["front_right_wheel_joint"]
    
    # Physical parameters - front axle
    wheel_separation: 0.4   # meters - front track width
    wheels_per_side: 1      # wheels per side on front axle
    wheel_radius: 0.125     # meters - front wheel radius
    
    # Command interfaces
    wheel_separation_multiplier: 1.0
    left_wheel_radius_multiplier: 1.0
    right_wheel_radius_multiplier: 1.0
    
    # Velocity and acceleration limits
    linear:
      x:
        has_velocity_limits: true
        has_acceleration_limits: true
        has_jerk_limits: false
        max_velocity: 1.5        # m/s
        min_velocity: -1.5       # m/s
        max_acceleration: 1.5    # m/s²
        min_acceleration: -1.5   # m/s²
        max_jerk: 0.0
        min_jerk: 0.0
    
    angular:
      z:
        has_velocity_limits: true
        has_acceleration_limits: true
        has_jerk_limits: false
        max_velocity: 1.5        # rad/s
        min_velocity: -1.5       # rad/s
        max_acceleration: 2.0    # rad/s²
        min_acceleration: -2.0   # rad/s²
        max_jerk: 0.0
        min_jerk: 0.0
    
    # Publishing configuration
    publish_rate: 50.0      # Hz
    odom_frame_id: odom
    base_frame_id: front_base_link
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    
    # TF publishing
    open_loop: false
    enable_odom_tf: false   # Disable TF for secondary controller
    
    # Command timeout
    cmd_vel_timeout: 0.5    # seconds
    
    # Reset odometry
    reset_odom: false

# Rear Drive Controller Configuration
rear_drive_controller:
  ros__parameters:
    # Joint names for rear wheels
    left_wheel_names: ["rear_left_wheel_joint"]
    right_wheel_names: ["rear_right_wheel_joint"]
    
    # Physical parameters - rear axle
    wheel_separation: 0.4   # meters - rear track width
    wheels_per_side: 1      # wheels per side on rear axle
    wheel_radius: 0.125     # meters - rear wheel radius
    
    # Command interfaces
    wheel_separation_multiplier: 1.0
    left_wheel_radius_multiplier: 1.0
    right_wheel_radius_multiplier: 1.0
    
    # Velocity and acceleration limits (synchronized with front)
    linear:
      x:
        has_velocity_limits: true
        has_acceleration_limits: true
        has_jerk_limits: false
        max_velocity: 1.5        # m/s - same as front
        min_velocity: -1.5       # m/s
        max_acceleration: 1.5    # m/s²
        min_acceleration: -1.5   # m/s²
        max_jerk: 0.0
        min_jerk: 0.0
    
    angular:
      z:
        has_velocity_limits: true
        has_acceleration_limits: true
        has_jerk_limits: false
        max_velocity: 1.5        # rad/s - same as front
        min_velocity: -1.5       # rad/s
        max_acceleration: 2.0    # rad/s²
        min_acceleration: -2.0   # rad/s²
        max_jerk: 0.0
        min_jerk: 0.0
    
    # Publishing configuration
    publish_rate: 50.0      # Hz
    odom_frame_id: odom
    base_frame_id: rear_base_link
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    
    # TF publishing
    open_loop: false
    enable_odom_tf: false   # Disable TF for secondary controller
    
    # Command timeout
    cmd_vel_timeout: 0.5    # seconds
    
    # Reset odometry
    reset_odom: false

# Auxiliary Controller Configuration (for implements, arms, etc.)
auxiliary_controller:
  ros__parameters:
    # Joint names for auxiliary functions
    joints:
      - aux_joint_1
      - aux_joint_2
    
    # Command interfaces
    interface_name: position
    
    # Position control parameters
    gains:
      aux_joint_1:
        p: 50.0     # Proportional gain
        i: 0.5      # Integral gain
        d: 5.0      # Derivative gain
        i_clamp: 0.5 # Integral windup limit
      aux_joint_2:
        p: 50.0
        i: 0.5
        d: 5.0
        i_clamp: 0.5
    
    # State publishing
    state_publish_rate: 50.0  # Hz