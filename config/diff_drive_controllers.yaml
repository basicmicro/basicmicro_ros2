# Differential Drive Robot Controller Configuration
# ================================================
# This configuration is suitable for small to medium differential drive robots
# with standard wheel configurations and typical performance requirements.

controller_manager:
  ros__parameters:
    update_rate: 100  # Hz - Controller update rate
    
    # Joint State Broadcaster - publishes joint states for visualization
    joint_state_broadcaster:
      type: joint_state_broadcaster/JointStateBroadcaster
    
    # Differential Drive Controller - main velocity controller
    diff_drive_controller:
      type: diff_drive_controller/DiffDriveController

# Joint State Broadcaster Configuration
joint_state_broadcaster:
  ros__parameters:
    # Joint names must match those in URDF
    joints:
      - left_wheel_joint
      - right_wheel_joint
    
    # Publishing configuration
    interfaces:
      - position
      - velocity
    
    # Extra joints (optional sensors, etc.)
    extra_joints: []

# Differential Drive Controller Configuration
diff_drive_controller:
  ros__parameters:
    # Joint names (must match URDF)
    left_wheel_names: ["left_wheel_joint"]
    right_wheel_names: ["right_wheel_joint"]
    
    # Physical robot parameters
    wheel_separation: 0.3  # meters - distance between wheel centers
    wheels_per_side: 1     # number of wheels per side
    wheel_radius: 0.1      # meters - wheel radius
    
    # Command interfaces
    wheel_separation_multiplier: 1.0
    left_wheel_radius_multiplier: 1.0
    right_wheel_radius_multiplier: 1.0
    
    # Velocity and acceleration limits
    linear:
      x:
        has_velocity_limits: true
        has_acceleration_limits: true
        has_jerk_limits: false
        max_velocity: 1.0        # m/s
        min_velocity: -1.0       # m/s
        max_acceleration: 1.0    # m/s²
        min_acceleration: -1.0   # m/s²
        max_jerk: 0.0           # m/s³
        min_jerk: 0.0           # m/s³
    
    angular:
      z:
        has_velocity_limits: true
        has_acceleration_limits: true
        has_jerk_limits: false
        max_velocity: 1.0        # rad/s
        min_velocity: -1.0       # rad/s
        max_acceleration: 1.5    # rad/s²
        min_acceleration: -1.5   # rad/s²
        max_jerk: 0.0           # rad/s³
        min_jerk: 0.0           # rad/s³
    
    # Publishing configuration
    publish_rate: 50.0      # Hz - State publishing rate
    odom_frame_id: odom
    base_frame_id: base_link
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01]
    
    # TF publishing
    open_loop: false        # Use encoder feedback for odometry
    enable_odom_tf: true    # Publish odometry transform
    
    # Command timeout
    cmd_vel_timeout: 0.5    # seconds - stop if no command received
    
    # Reset odometry service
    reset_odom: false